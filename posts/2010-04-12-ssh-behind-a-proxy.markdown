---
title: SSH за проксей
published: 2010-04-12T10:21:00Z
categories: 
tags: mirror
---

Этот пост является переводом статьи <a href="http://daniel.haxx.se/docs/sshproxy.html">«SSH Over Proxy»</a> Даниэля Стенберга (Daniel Stenberg), выполненный для <a href="http://welinux.ru">welinux.ru</a> <a href="http://welinux.ru/post/2664/#cmnt48772">по просьбе пользователя |xed|</a><br />Переведена редакция статьи, датированная 24-м ноября 2009-го года, 23:53 (Центральная Европа, Стокгольм, Швеция).<br /><a name='more'></a><br /><h3>SSH через или за прокси</h3>В сегодняшнем жестоком сетевом мире мы слишком часто оказываемся за проксями компаний, ограничивающих наши возможности по использованию интернета на работе, у заказчика или, в некоторых случаях, даже дома или у друзей.<br /><br />Прокси-сервера не только ограничивают нас в том, что мы можем делать, какие протоколы можем использовать, какие сайты можем посещать и какие TCP порты являются открытыми, они также позволяют вашей компании или друзьям наблюдать и контролировать вас.<br /><br /><b>Заметьте:</b> даже если вы используете HTTPS через прокси, имя сервера не шифруется, так что логирующий прокси увидит, к каким HTTPS серверам вы подключаетесь.<br /><br />Я покажу вам некоторые простые способы, позволяющие обойти ограничения большинства проксей, что даст вам больше свободы и не позволит наблюдателям исследовать ваши предпочтения в веб-серфинге!<br /><br /><h3>Что вам нужно</h3>Вам нужен софт, установленный и работающий «снаружи» по отношению к тому месту, где вы находитесь. В этом документе я называю такое место «домом».<br /><br />Место, из которого вы хотите получить доступ, будет называться «работой». На работе вы находитесь за злым прокси-сервером.<br /><br /><h3>Дома</h3><b>Вам нужен работающий HTTP-прокси</b>, принимающий соединения с localhost'а. У многих людей есть уже работающий Apache, а подгрузить и сконфигурировать mod_proxy очень легко. Конечно же, вы можете использовать любой другой прокси, например, squid. В этом примере будет подразумеваться, что прокси работает на 80-м порту — том же, что и обычный апач.<br /><br />Вы можете включить HTTPS и FTP, а также любой другой протокол в конфиге прокси.<br /><br /><b>Вам также понадобится sshd, работающий на 443-м порту.</b> Почти у каждого уже есть работающий sshd, вам просто нужно сделать так, чтобы он также слушал порт 443. 443-й часто используется для HTTPS, потому-то мы его и используем — большинство проксей позволяют к нему подключаться, так как компании разрешают своим работникам использовать банки и другие HTTPS сервисы в вебе.<br /><br />Наверное, этого можно и не говорить, но вы должны убедиться, что ваш Apache или другой httpd не использует 443-й порт для HTTPS.<br /><br /><h3>На работе</h3><b>Вам нужен SSH клиент</b>, способный посылать CONNECT-запросы через ваш корпоративный HTTP прокси. Под Windows можно использовать Putty — в нём есть встроенная поддержка для туннелирования через HTTP прокси. Под unix/linux (или cygwin), вы можете использовать openssh и corkscrew для того, чтобы через прокси попасть на 443-й порт своего домашнего компьютера.<br /><br />Если вы используете openssh, добавьте в свой <code>~/.ssh/config</code> такую строку:<br /><div class="code"><code>ProxyCommand /usr/local/bin/corkscrew proxy.work.com 80 %h %p</code></div><br />Теперь вы должны указать вашему ssh клиенту пробросить локальный порт, скажем, 8080-й, на удалённый localhost:80. После этого вы получаете шифрованный канал к вашему домашнему компьютеру. Естественно, у вас также будет обыкновенный SSH, так что вы можете запускать X-приложения так, чтобы они появлялись на экране вашего рабочего компьютера, а также многое другое.<br /><br />Команда openssh для подключения и проброса порта через прокси выглядит примерно так:<br /><div class="code"><code>ssh -L 8080:localhost:80 user@server.at.home -p 443</code></div><br /><b>Сконфигурируйте ваш браузер</b> на работе так, чтобы для всех протоколов, которые вы включили на прокси-сервере дома, использовался прокси по адресу localhost:8080.<br /><br />Теперь все запросы браузера будут посылаться через SSH-соединение через прокси на ssh сервер дома, а потом — прокси-серверу и в мир.<br /><br /><h3>Без CONNECT</h3>В случае, если подключение к 443-у порту запрещены, вы можете попробовать другой (если CONNECT разрешен хоть где-то); вам может понадобится перенести ваш прокси/веб сервер с 80-го порта, если это единственный приемлемый путь.<br /><br />Если не можете найти подходящий порт или CONNECT запрещены насовсем, вы должны создать туннель с помощью обыкновенного HTTP, используя, например, <a href="http://www.nocrew.org/software/httptunnel.html">httptunel</a>. httptunel — это клиент-серверное приложение; вам нужен сервер («hts»), работающий на домашнем компьютере и слушающий 80-й порт, и клиент («htc»), запущенный на вашем рабочем компьютере и создающий тунель.<br /><br />Дома принимайте входящие соединения на 80-й порт и перенаправляйте их на 22-й (ssh):<br /><code>hts -F localhost:22 80</code><br /><br />На работе подключайтесь к дому через корпоративный прокси и пробрасывайте локальный порт (8022-й, например) на SSH дома:<br /><div class="code"><code>htc -P proxy.corp.com:80 -F 8022 server.at.home:80</code></div><br /><br /><h3>Дополнительные комментарии</h3>С другими протоколами для начала надо просто пробросить больше портов с работы домой. Дальше всё зависит от протокола. Например, если вы хотите настроить работу IRC, вам понадобится «боунсер» (например <a href="http://muh.sf.net/">muh</a>), работающий на вашей домашней машине, так как в противном случае IRC не будет работать правильно.<br /><br />В случае, если на работе вас на самом деле не прячут за прокси, вы все равно можете использовать описанные методы (хотя вы можете пропустить часть, описывающую выполнение CONNECT, а также не обязаны привязывать ssh к 443-му порту) для того, чтобы не дать админам шпионить за вашим сетевым траффиком.<br /><br /><br />Прим. перводчика: спасибо <a href="http://welinux.ru/user/mrak018/">mrak018</a> за советы и подсказки!

<h3 id='hakyll-convert-comments-title'>Comments (migrated from Blogger)</h3>
<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-06-10T04:11:26.572+03:00, virens wrote:</p>
<p class='hakyll-convert-comment-body'>
В наших степях сие актуально, так что спасибо за пост (только что увидел). А о работе scp за проксёй чего добавишь? А то мануалы читать не охота :-)
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-06-10T08:05:35.609+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
Гм, а при чём здесь scp? Суть статьи в том, чтобы весь твой траффик шёл через зашифрованное ssh соединение. С помощью scp такой трюк не проделаешь.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-08-03T15:47:50.820+03:00, Анонимный wrote:</p>
<p class='hakyll-convert-comment-body'>
я делал вообще без прокси сервера. Цеплялся по ссш на домашнюю тачку с форвардингом портов, например 1080. В броузере прописывал localhost:1080 как сокс прокси
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-08-04T01:45:18.542+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
Кстати говоря, я тоже всегда использовал вариант без каких-либо апачей и прочего — точно так же коннектился по ssh с форвардингом и юзал как socks-прокси. Но ведь статья — это перевод, откуда, как и из песни, слов не выбросишь…
</p>
</div>



