---
title: ZSH: делаем второй шаг
published: 2009-11-21T17:20:00Z
categories: 
tags: zsh,linux
---

В <a href="http://debiania.blogspot.com/2009/07/zsh.html">предыдущем посте</a> было немало сказано о вкусностях, которые сулит пользователю Z-Shell. Но та статья имела вводной характер, её призвание — заинтересовать потенциального пользователя любопытными возможностями. Свою задачу она выполнила на целых 200%, поэтому по <a href="http://debiania.blogspot.com/2009/07/zsh.html?showComment=1258050468575#c7461558263869807070">требованию читателей</a> я расскажу о том, как на практике юзать вкусности zsh.<br /><a name='more'></a><br />Обсуждать каждую используемую мной возможность было бы очень долго и довольно скучно — могу поспорить, читателям не терпится перейти от простого чтения к правке своих <code>.zshrc</code>. По этой причине статья будет построена на цитировании наиболее интересных кусков моего конфига с добавлением некоторых пояснений.<br /><br /><h3>Автодополнение</h3>Автодополнение — это то, что чаще всего упоминается в разговоре о zsh. Включить его очень просто:<br /><div class="code"><code>autoload -Uz compinit && compinit</code></div>Поведение этой функции можно конфигурировать очень долго, но т.к. я этим пока не занимался — меня вполне устраивают дефолтные настройки — ничего более подробного я не расскажу.<br /><br /><h3>История</h3><div class="code"><code># файл истории<br />HISTFILE=~/.history<br /># кол-во команд, хранимых шеллом в текщей сессии<br />HISTSIZE=10240<br /># кол-во команд, которые будут сохранены в истории<br />SAVEHIST=8192<br /># все работающие копии zsh будут иметь одинаковую историю<br /># не беспокойтесь — команды вроде «!» (повтор последней команды) будут использовать<br />#  только историю текущего шелла<br />setopt SHARE_HISTORY<br /># при добавлении в историю новой команды все её дупликаты будут удалены, а команда<br />#  будет помещена в конец<br />setopt HIST_IGNORE_ALL_DUPS<br /># не сохранять команды, начинающиеся с пробела<br /># очень удобно, если вы вынуждены указать в командной строке имя пользователя,<br />#  пароль или другую конфиденциальную информацию<br />setopt HIST_IGNORE_SPACE<br /># команды «history» и «fc» в историю заноситься не будут<br />setopt HIST_NO_STORE</code></div><br /><h3>Приглашение командной строки (prompt)</h3>В ZSH, в отличие от bash'а, prompt'ов два — левый и правый. Лично я считаю очень удачным вариантом такие настройки:<br /><div class="code"><code># левое приглашение — «%» для обычного юзера и «#» — для рута<br />PROMPT="%# "<br /># правое приглашение — путь к текущей директории (от ~, если вы где-то в домашней<br />#  директории, или от /, если вы пошли бродить по системе), отображаемый зелёным<br />#  цветом<br />RPROMPT="%{$fg[green]%}%~%{$reset_color%}"</code></div>Хорошей альтернативой ручному заданию prompt'а является использование promptinit. Откройте zsh и наберите следующее:<br /><div class="code"><code>% autoload promptinit<br />% promptinit<br />% prompt -p</code></div>По экрану быстро промелькнёт около 20 вариантов приглашений, которые вы можете использовать. Если какая-то из тем вам понравилась, наберите:<br /><div class="code"><code>% prompt имя_темы</code></div>и тема будет применена. Подтвердить, что вы хотите использовать именно эту тему, можно следующей командой:<br /><div class="code"><code>% prompt -s имя_темы</code></div>Мой zsh (версии 4.3.6) пока что не поддерживает сохранение, но если вы столкнулись с такой же ситуацией — не расстраивайтесь. Вам достаточно самостоятельно закомментировать вышеприведённые <code>PROMPT</code> и <code>RPROMPT</code> (если вы добавили их в конфиг, конечно) и вместо них написать следующее:<br /><div class="code"><code>autoload -U promptinit && promptinitprompt имя_понравившейся_темы</code></div><br /><h3>Алиасы</h3>Казалось бы, алиасы — простая сущность, что же здесь можно было улучшить? Тем не менее, авторы zsh нашли что добавить к привычной функциональности.<br /><br />В прошлой статье упоминалось автоматическое исправление команд — например, если вы набрали «aptitde install пакет», шелл предложит вам заменить aptitde на aptitude. Иногда эта возможность может обернуться лихом, пытаясь заменить какие-то команды (mc на mv или наоборот). Если такое случается, добавьте соответствующий алиас:<br /><div class="code"><code>alias mc="nocorrect mc"</code></div>Ключевым здесь является слово <code>nocorrect</code> — оно указывает zsh'у ни в коем случае не исправлять «<code>mc</code>».<br /><br />Вторым расширением алиасов, которое я оценил лишь недавно, являются так называемые суффиксальные алиасы. Они призваны упростить работу с файлами. Рассмотрим пример:<br /><div class="code"><code>alias -s pdf=evince<br />alias -s djvu=evince<br />alias -s fb2=fbless</code></div>Думаю, некоторые читатели уже догадались — суффиксальные алиасы служат для установки соответствия между расширениями файлов и программами. Например, теперь мне не надо писать «evince file.pdf» — я набираю только «file.pdf», а суффиксальный алиас «разворачивает» это в «evince file.pdf». Эта штука реально экономит время и силы.<br /><br />Ещё одним улучшением в алиасах стали глобальные алиасы, но я с ними пока не разбирался, так что просто отошлю вас к <a href="http://muhas.ru/?p=30">заметке muhas'а</a> — он описал всё достаточно подробно. Кстати, именно из этого его поста я узнал про суффиксальные и глобальные алиасы.<br /><br /><h3>Функции</h3>Вот мы и подошли к функциям — довольно обыденной вещи, которую, тем не менее, тоже нафаршировали вкусностями :) Одна из них — это функции <code>precmd</code> и <code>preexec</code>. Первая вызывается перед выводом prompt, вторая — перед выполнением какой-либо команды. Я это использовал для того, чтобы добавлять в заголовок urxvt имя запущенной программы<br /><div class="code"><code>case $TERM in<br />&nbsp;&nbsp;xterm* | rxvt*)<br />&nbsp;&nbsp;&nbsp;&nbsp;# precmd вызывается непосредственно перед выводом prompt<br />&nbsp;&nbsp;&nbsp;&nbsp;precmd() {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print -Pn "\e]0;zsh\a"<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;# preexec вызывается перед выполнением команды<br />&nbsp;&nbsp;&nbsp;&nbsp;# $1 — имя команды (точнее, вся команда со всеми переданными параметрами)<br />&nbsp;&nbsp;&nbsp;&nbsp;# sed используется для «отрезания» от команды параметров<br />&nbsp;&nbsp;&nbsp;&nbsp;preexec() {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print -Pn "\e]0;`echo $1 | sed -r 's/^([^[:space:]]+).*/\1/'`\a"<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;;<br />esac</code></div>Определения функций заключены в case, срабатывающий только в иксовых терминалах — если бы эти функции выполнялись в tty, перед выводом приглашения и перед выполнением команды вы получали бы на экране всякую чепуху.<br /><br />Ещё одна функция, которой я хотел бы с вами поделится — это lcd:<br /><div class="code"><code>function lcd() {cd "$1" && ls}</code></div>Лично мне она экономит довольно много времени, т.к. обычно после перехода в директорию я вызываю ls.<br /><br /><h3>Miscellaneous</h3>Напоследок мне осталось рассказать о всяких незначительных опциях, которые нельзя ни выбросить, ни отнести к какому-то из вышеприведённых разделов.<br /><div class="code"><code># переходить в директорию даже если пользователь не ввёл cd в начале, но набрал<br />#  верный путь<br />setopt AUTO_CD<br /># по возможности исправлять команды<br />setopt CORRECT<br /># цвета для ls<br /># при переносе на другую машину не забудьте захватить мой ~/.dir_colors, в котором<br />#  переопределён цвет для директорий<br />eval `dircolors ~/.dir_colors`<br />zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}<br /># Включение поддержки выражений вроде «{1-3}» или «{a-d}» — они будут разворачиваться<br />#  в «1 2 3» и «a b c d» соответственно<br />setopt BRACECCL<br /># загрузка системы помощи<br /># для удобства использования можно добавить алиас help="run-help"<br />autoload run-help</code></div>Требуется сделать небольшое примечание касательно цветов для ls: мой <code>~/.dir_colors</code> вы можете получить <a href="http://dumpz.org/14522/">здесь</a>, почитать о том, что же сподвигло меня менять умолчальные настройки — <a href="http://debiania.blogspot.com/2009/05/ls_10.html">тут</a>.<br /><br />Собственно, на этом разговор об используемых мною вкусностях zsh можно закончить. Советую заглянуть в блог muhas'а, там довольно много <a href="http://muhas.ru/?t=zsh">записей с тегом zsh</a>.<br /><br /><br />P.S. В процессе экспериментов вам обязательно захочется сразу применять изменённый <code>.zshrc</code>. Для этого после редактирования и сохранения изменений вам достаточно набрать в терминале следующее:<br /><div class="code"><code>source .zshrc</code></div>

<h3 id='hakyll-convert-comments-title'>Comments</h3>
<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-23T14:11:11.602+02:00, virens wrote:</p>
<p class='hakyll-convert-comment-body'>
Пост классный и так и тянет попробовать zsh - может, руки и дойдут. Интересно, а zsh перекрывает возможности wicd? Просто как-то мимо меня пролетало, что у zsh есть такая возможность, ибо держать ещё и wicd не очень хочется (работает она криво в плане настройки).<br />И ещё раз за пост мерси.<br /><br />P.S. Насчёт заблокированных комментариев - я уже не в первый раз на это налетаю в блоггере: меняем стиль комментов и настройки сбрасываются.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-23T14:54:07.198+02:00, Programmaster wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>Пост классный и так и тянет попробовать zsh - может, руки и дойдут.</b><br />Ты только время подбирай — а то zsh штука интересная, закопаешься в неё, забыв обо всём на свете :)<br /><br /><b>Интересно, а zsh перекрывает возможности wicd?</b><br />w<b>i</b>cd или wcd?<br />Хотя без разницы — я ни про первое, ни про второе не знаю :) Может быть, как-то пересекаться с wcd zsh и может, а вот с wicd вряд ли.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-24T21:09:05.735+02:00, al31f wrote:</p>
<p class='hakyll-convert-comment-body'>
Здорово, спасибо, поставил, попробовал, классная вещь. До этого на стандартном баше сидел, даже не цветном. Правда конфиг из первой части не подошел, по табу сразу меню вылазило, так и не нашел какая строчка за это отвечает, начал с нуля, постепенно добавляя разные вещи. Теперь по одному нажатию на таб показываются варианты, а уже по следующему начинается перебор. Это в стандартном варианте так. Спасибо за статью.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-25T03:36:59.350+02:00, sash-kan wrote:</p>
<p class='hakyll-convert-comment-body'>
любители zsh такие любители!<br />из описанного в этом посте в bash нету только<br />setopt CORRECT<br /><br />&gt;по одному нажатию на таб показываются варианты<br />о, америка!<br />readline (в котором есть и такое поведение), как бы к слову, используеться не только bash-ем но и:<br />$ apt-cache rdepends libreadline5  | sed 1,2d | wc -l<br />282<br /><br />как говорили классики, учите,   граждане,      матчасть…<br /><br />p.s. что это за жестокий редактор постов тут у вас стоит? эта его медвежья услужливость как-нибудь отключается?
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-25T18:26:17.587+02:00, al31f wrote:</p>
<p class='hakyll-convert-comment-body'>
&gt;о, америка!<br />Ну да, я знаю, баш показывает варианты. А в баше можно настроить так чтобы по второму нажатию tab начинался перебор вариантов? <br />И скажем сейчас я набираю unrar                                                                                                                 , нажимаю таб, а мне снизу сразу список:<br />e   -- extract files to current directory<br />l   -- list archive<br />lb  -- list archive (bare format)<br />lt  -- list archive (technical format)<br />p   -- print file to stdout<br />t   -- test archive files<br />v   -- verbosely list archive<br />vb  -- verbosely list archive (bare format)<br />vt  -- verbosely list archive (technical format)<br />x   -- extract files with full path<br /><br />Я конечно не лазил по настройкам баша, но у меня при включенных автодополнениях криво обрабатывал файлы с пробелами и не хотел их дополнять, рассматривая введеное ранее мной как два слова. Символ \ ему ничего не говорил.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-25T18:40:46.142+02:00, Programmaster wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>из описанного в этом посте в bash нету только setopt CORRECT</b><br />Никогда не слышал об общей истории для нескольких сессий, о суффиксальных и глобальных алиасах, AUTO_CD и правом prompt&#39;е в bash. Если и есть, то закопано в какой-то отдельный пакетик — зачем?<br /><br />Я за последние полтора года стал до жути ленив в плане компов, zsh этой лени очень сильно способствует. На конфиг, части которого выше, я потратил всего день или два, потом ещё несколько раз по часику допиливал, добавляя новые возможности, а теперь вот юзаю себе на радость.<br /><br />Про редактор ничего не понял. Стандартненький blogspot&#39;овский редактор, ничего особенного… О какой «медвежьей услужливости» речь?<br /><br />P.S. sash-kan, а расскажите-ка о том же, что и я, но применительно к bash? Это не провокация, мне правда интересно сравнить количество затрачиваемых усилий и качество результата.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-25T19:32:29.770+02:00, al31f wrote:</p>
<p class='hakyll-convert-comment-body'>
Тоже настраивал, благодаря статье час-два. И еще, если мне нужно убить процесс mpc123 я набираю kill m, нажимаю таб и мне выдает список из 8 возможных пунктов, процессы, начинающиеся с буквы m. Как такое сделать в баше?<br />ps А как тут, в комментариях, выделять жирным шрифтом?
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-25T19:41:58.776+02:00, Programmaster wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>А как тут, в комментариях, выделять жирным шрифтом?</b><br />Разрешены html теги b (полужирный) и i (курсив). Пользуйся.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-27T14:22:58.520+02:00, al31f wrote:</p>
<p class='hakyll-convert-comment-body'>
Вот первый недостаток zsh, который я обнаружил: не работает cclive, программка, скачивающая видеофайлы с ютуба и подобных сайтов. Почему, не выяснял. Говорит следующее:<br /><i><b>$ cclive http://www.youtube.com/watch?v=HEheh1BH34Q </b>                                                                         <br />zsh: no matches found: http://www.youtube.com/watch?v=HEheh1BH34Q</i>
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-27T16:14:13.165+02:00, Programmaster wrote:</p>
<p class='hakyll-convert-comment-body'>
2 al31f:<br /><br />ZSH считает URL регулярным выражением и пытается его развернуть. Используй кавычки.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-11-28T09:54:28.813+02:00, al31f wrote:</p>
<p class='hakyll-convert-comment-body'>
А, с кавычками заработало. Привык, что в баше работало и без кавычек, что даже и не подумал об этом.<br />Спасибо за совет.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-12-02T19:09:57.539+02:00, Анонимный wrote:</p>
<p class='hakyll-convert-comment-body'>
&gt; И еще, если мне нужно убить процесс mpc123 я набираю kill m, нажимаю таб и мне выдает список из 8 возможных пунктов, процессы, начинающиеся с буквы m. Как такое сделать в баше?<br /><br />RTFM! pkill mpc123
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-12-06T06:34:15.348+02:00, Анонимный wrote:</p>
<p class='hakyll-convert-comment-body'>
А как настроить zsh, чтобы он автодополнял по клавише Up из истории команд. Т.е. вводил я предроложим ранее: <br />#ssh bla@bla<br />#ssh bla@foo<br />Мне нужно опять набрать bla@foo, я набираю #bla и начинаю перебирать курсором все команды из истории начинающиеся на #bla. В bash-completistion привык, а в zsh - не знаю как настроить.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-12-06T14:59:49.781+02:00, Programmaster wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>2 Анонимный:</b><br /><br />Добавьте в Ваш ~/.zshrc следующую строку:<br /><br />bindkey &#39;^[[A&#39; up-line-or-search<br /><br />(<a href="http://wiki.archlinux.org/index.php/Zsh" rel="nofollow">источник</a>).<br /><br />P.S. Кстати, об автодополнении имени хоста для ssh сегодня в RSS упала <a href="http://www.sourceguru.net/ssh-host-completion-zsh-stylee/" rel="nofollow">неплохая заметочка</a> (я, правда, не тестил).
</p>
</div>



