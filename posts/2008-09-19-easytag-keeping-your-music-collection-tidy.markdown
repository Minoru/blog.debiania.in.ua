---
title: EasyTag - залог порядка в музыкальной коллекции
published: 2008-09-19T04:00:00Z
categories: 
tags: linux,review
---

Время от времени меня одолевает желание привести все 120 гигабайт моего /home в порядок. Такое желание обычно остывает через полчаса любования на вывод ls /home/minoru/чего-то_там. Но есть программы, которые позволяют за эти полчаса успеть сделать-таки что-то полезное. Одной из таких программ является редактор тегов и имён аудиофайлов EasyTag, о котором и пойдёт речь.

Сейчас трудно найти компьютерного пользователя, не имеющего собственной музыкальной коллекции. Интернет дал возможность послушать альбом Pink Floyd, выпущенный свыше 30-ти лет назад, не прибегая к поиску раритетных кассет или грампластинок. Самым популярным форматом хранения музыки стал mp3, сочетающий в себе высокую степень сжатия и относительно хорошее качество (для компьютера со встроенной звуковой картой и какими-нибудь наушниками mp3-шек с битрейтом 128-256 kbps вполне достаточно). MP3 также имеет такую замечательную штуковину, как <b>теги</b>. Они позволяют хранить в файле не только звук, но и информацию об этом звуке, к примеру, имя исполнителя и название песни. Но не все рипперы (люди, копирующие музыку с аудиодисков и преобразующие их в mp3 файлы) утруждают себя заполнением тегов или вменяемым именованием полученных файлов. Именно благодаря таким деятелям и сочиняются анекдоты о крутости Unknown Artist'а и особой сногсшибательности его композиции Track 13. Чаще всего встречается ситуация, когда файл имеет более-менее вразумительное и содержательное имя, но девственно чистые теги; либо, напротив, хорошо заполненные теги и просто никакущие имена. Для исправления такого рода ситуаций существует специальный софт. Один из представителей сего семейства — программа EasyTag, о которой и пойдёт речь.



<b>1. Установка</b>

У меня соответствующий пакет называется *easytag-aac*. Находится он в репозитории debian-multimedia.org. Для установки пакета сначала добавьте репозиторий в sources.list (готовую строку для конфига можно скопировать <a href="http://debian-multimedia.org/debian-m.php"  target="_blank">отсюда</a> или <a href="http://debian-multimedia.org/debian-m-testing.php" target="_blank">отсюда</a>, если вы хотите использовать testing-версии пакетов), а затем выполните команду:
```
sudo aptitude update && sudo aptitude install easytag-aac
```

<b>2. Использование</b>

<i>При первом запуске программа будет порываться просканировать все ваши разделы на предмет наличия аудиофайлов — советую отменить эту операцию.</i>

Итак, что же мы видим? Окно программы разделено на четыре области:
<ol><li>дерево каталогов;</li><li>список найденных файлов;</li><li>имя файла и его теги;</li><li>лог действий.</li></ol>

Принцип действия следующий: сначала выбираете в дереве каталогов папку, в которой хранятся обрабатываемые файлы. После того как будет сформирован список файлов, можете выделять те, которые вы собрались обрабатывать, и лезть в контекстное меню. Самыми полезными являются подпункты субменю <i>Сканер</i> — <i>Заполнить тег(и)...</i>, <i>Переименовать файл(ы) и каталог...</i> и <i>Обработать поля...</i>. Рассмотрим каждый из них в отдельности.


<b>Заполнить тег(и)...</b>

Вобщем-то, название выражает смысл операции достаточно ясно — заполнение тегов из имени файла. Требуется только немного потренироваться в составлении шаблонов имени &mdash; а дальше всё пойдёт как по маслу. Советую нажать кнопочку <i>Показать/скрыть подсказку</i> &mdash; это отобразит внизу окна небольшую шпаргалочку по переменным, которые можно использовать в шаблонах.

<b>Примеры шаблонов</b>

<i>Имя файла: </i><b>01. Pink Floyd - Time.mp3</b><br/>
<i>Шаблон: </i><b>%n. %a - %t</b>

<i>Имя файла: </i><b>2_-_Within_Temptation_-_Ice_Queen.mp3</b><br/>
<i>Шаблон: </i><b>%n_-_%a_-_%t</b><br/>
<i>В данном примере следует обратить внимание на тот факт, что EasyTag автоматически заменяет знаки подчёркивания на пробелы. О том, как отключить эту опцию, будет сказано ниже, в разделе об обработке полей.</i>

<i>Имя файла: </i><b>nightwish/angels fall first/05. angels fall first.mp3</b><br/>
<i>Шаблон: </i><b>%a/%b/%n. %t</b><br/>
<i>Из этого примера следует, что EasyTag способен распознавать структуру каталогов. Обратите внимание, что он делает это от файла и вверх по дереву (т.е. по направлению к корневому каталогу) — это существенно.</i>

<i>Имя файла: </i><b>Пиратская станция VI - Русская версия/[04] Ozam - My Hip Hop.mp3</b><br/>
<i>Шаблон: </i><b>%b/[%n] %a - %t</b><br/>
<i>Обратите внимание на то, что EasyTag способен воспринимать разнообразные символы — это позволяет научить программу корректно вытянуть информацию из таких имён файлов, которые и человеку-то понять сложно.</i>



<b>Переименовать файл(ы) и каталог...</b>

Выше была рассмотрена ситуация, когда имя файла (и, возможно, путь к нему) содержат информацию, которой нет в тегах. Часто встречается и обратная ситуация — теги заполнены, но имена неразборчивы (к примеру, были "побиты" во время неправильного копирования с плеера или флешки друга). Данный пункт меню предназначен именно для того, чтобы из корректных тегов сформировать корректные названия. Для генерации используются такие же шаблоны, как и при заполнении тегов, поэтому я не буду показывать примеры &mdash; просто перечитайте предыдущий раздел снизу вверх (т.е. сначала шаблон, а потом имя файла).



<b>Обработать поля...</b>

И, наконец, третий пункт меню — обработка полей. В разделе про заполнение тегов из имени я уже приводил пример замены &mdash; знак подчёркивания становится пробелом. Помимо этого, программа умеет менять регистр символов. К примеру, вы можете привести все имена к нижнему регистру или, наоборот, к верхнему. Если желаете красоты, поставьте флажок <i>Каждое слово начинается с заглавной буквы</i> &mdash; на мой взгляд, так названия песен и имена исполнителей выглядят наиболее естественно.




После окончания правок не забудьте нажать кнопочку <i>Сохранить файл(ы)</i>, иначе весь ваш труд пойдёт прахом.

Надеюсь, эта статья помогла вам привести вашу музыкальную коллекцию в некое подобие порядка. Удачи ;)

<h3 id='hakyll-convert-comments-title'>Comments (migrated from Blogger)</h3>
<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2008-09-23T14:42:00.000+03:00, morbo wrote:</p>
<p class='hakyll-convert-comment-body'>
Я пользуюсь Ex falso.

Удобнее в качестве шаблонов вводить &lt;title&gt;, а не какое-нибудь непонятное %t.

Поддерживаются нестандартные поля (список стандартных не ограничивается 4-6 тегами).

Поддерживается загрузка информации из CDDB и MusicBrainz.

Нет проблем с кодировками (я один раз в EasyTag убил русские теги у довольно большого количества песен).

И т.д. и т.п. Очень советую попробовать.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2008-09-23T19:33:00.000+03:00, Programmaster wrote:</p>
<p class='hakyll-convert-comment-body'>
Взглянул я на этот exfalso (благо, пакетик в репозиториях есть). Ничего так, работает :) Выводы ниже.

- Не сразу дошло, какие шаблоны можно использовать в шаблонах имён (извините за каламбур). Могу оправдаться только тем, что содержимое вкладок просматривал бегло - не сразу заметил колонку "Тег" на вкладке "Редактировать теги".

- По сравнению с EasyTag программа показалась убогой.

- Этот интерфейс - не интуитивно понятен, а документацию я так и не нашёл. WTF?

+ В шаблонах обнаружилась вертикальная черта, предположительно обозначающая логическое ИЛИ. За это однозначный плюс, т.к. возможность сделать в шаблоне ИЛИ позволяет обрабатывать больше файлов за один проход.

Итого, за беглый двухминутный просмотр обнаружено три минуса и один плюс. Вывод: если мне понадобится редактировать теги, буду юзать EasyTag. Ex falso же пусть ждёт того часа, когда мне будет скучно (я в такие моменты возвращаюсь к вопросам/проблемам, которые я не решил, а обошёл).

В любом случае, <B>morbo</B>, спасибо за комментарий.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2009-01-13T12:22:00.000+02:00, morbo wrote:</p>
<p class='hakyll-convert-comment-body'>
- Не сразу дошло, какие шаблоны можно использовать в шаблонах имён (извините за каламбур).

Зато они наглядные. Не непонятное %n, а полноценное &lt;tracknumber&gt;.

- По сравнению с EasyTag программа показалась убогой.

Они обе убого выглядят, потому что GTK. Интерфейс EasyTag несколько перегружен.

- Этот интерфейс - не интуитивно понятен, а документацию я так и не нашёл.

Интуиция у вас плохая, я разобрался сразу :)

Ex Flaso для редактирования тегов использует библиотеку mutagen, которая поддерживает редактирование тегов: ASF, FLAC, M4A, Monkey&#39;s Audio, MP3, Musepack, Ogg FLAC, Ogg Speex, Ogg Theora, Ogg Vorbis, True Audio, WavPack, OptimFROG. Эта библиотека написана со скурпулёзным соблюдением форматов тегов. В пакет mutagen входит ряд консольных утилит для редактирования тегов, с их помощью можно вообще автоматизировать разгребание тегов, если написать скрипт.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2011-04-06T11:53:37.012+03:00, Анонимный wrote:</p>
<p class='hakyll-convert-comment-body'>
Привет! Помогите установить Easy Tag!
Скачиваю GTK библиотеки, устанавливаю, и все равно не открываается сам Easy Tag!!!! Пишет что ГТК нет(((((((
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2011-04-06T17:03:19.070+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>2 Анонимный:</b><br/>
<i>&gt; Привет! Помогите установить Easy Tag!<br/>
Скачиваю GTK библиотеки, устанавливаю, и все равно не открываается сам Easy Tag!!!! Пишет что ГТК нет(((((((</i>

Из такого описания совершенно непонятно, что не так. EasyTag ставили из репозиториев с помощью apt-get/aptitude/Synaptic/KPackage/etc, или сами собирали из исходников? Советую обратиться на форумы — например, <a href="http://unixforum.org/" rel="nofollow">unixforum.org</a>. Только прочтите сначала <a href="http://www.catb.org/~esr/faqs/smart-questions.html" rel="nofollow">How To Ask Questions The Smart Way</a> (перевод на русский есть <a href="http://segfault.kiev.ua/smart-questions-ru.html" rel="nofollow">здесь</a>) ;)
</p>
</div>



