---
title: Как использовать dpatch
published: 2010-12-23T15:20:00Z
categories: 
tags: debian
description: Перевод статьи о менеджменете патчей, накладываемых при сборке deb-пакетов.
---

Для полноты картины с пересборкой Debian–пакетов (см. мой [предыдущий пост](/posts/2010-12-23-how-to-rebuild-debian-packages.html)) решил перевести статью об использовании тулзы для менеджмента патчей — dpatch.

<p align="right">Эта статья является переводом поста<br/>
Сандро Тоси (Sandro Tosi) <a href="http://matrixhasu.altervista.org/index.php?view=use_dpatch">“HowTo use <code>dpatch</code>”</a></p>

Важным правилом, которому должен следовать каждый сопровождающий пакета, заключается в том, чтобы не допускать изменения апстримового кода (<i>upstream — это разработчики программы, из которой потом создаётся пакет. Прим. переводчика</i>).

<i>Правильный Путь</i> заключается в создании набора патчей, которые должны применяться к апстримовому коду при создании пакета; это позволит diff.gz содержать только изменения внутри директории debian/, что есть <i>Хорошо</i>.

Популярным инструментом для управления патчами при создании пакетов является dpatch.

<h3>0. Базовые вещи</h3>

Прежде всего нужно установить `dpatch`:
```
# apt-get install dpatch
```
и добавить <code>dpatch</code> в поле <code>Build-Depends</code> в файле <code>debian/control</code>. Более того, нужно создать директорию <code>debian/patches</code>: это место, где хранятся патчи.

В этой же директории будет файл <code>debian/patches/00list</code>: он будет содержать список имён патчей и они будут применены в том порядке, в котором упоминаются в этом файле.

<h3>1. Создание патча</h3>

Поставленный ранее пакет содержит полезную утилиту — <code>dpatch-edit-patch</code>:

* заходим в директорию с исходниками пакета
* выполняем

  ```
  dpatch-edit-patch <имя_патча>
  ```

Будет создана копия директории с исходниками пакета, после чего будет запущен дочерний шелл; делайте свои правки и выходите из шелла (<i>Сделать это можно с помощью команды <code>exit</code>. Если хотите покинуть шелл, не сохраняя сделанных правок, выполните <code>exit 230</code>. Прим. переводчика</i>). После этого будет создан патч <code>debian/patches/имя_патча</code>, в который будут записаны все ваши правки.

Не забудьте обновить <code>debian/patches/00list</code>.

Хорошей практикой является добавление в патч сообщения о копирайте. При этом можно использовать примерно такой подход: тривиальные патчи объявляются общественным достоянием, а более сложные лицензируются под той же лицензией, что и программа.

<h3>2. Конвертирование патча</h3>

Этот скрипт (спасибо Чарльзу Плесси (Charles Plessy)) принимает на вход модифицированный и оригинальный файлы, создаёт патч в универсальном формате и затем конвертирует его в формат dpatch'а.

<pre><code>diff -u первоначальные-исходники/файл модифицированные-исходники/файл | \
dpatch patch-template -p "&lt;номер&gt;_&lt;краткое_описание&gt;"   \
"&lt;что делает патч&gt;" &gt; путь/к/debian/patches/&lt;номер&gt;_&lt;краткое_описание&gt;.dpatch</code></pre>

(замените &lt;теги&gt; на подходящие значения).

Обычно патч (по большей части тот, который присылается через систему отслеживания багов) представляет собой файл: для того, чтобы его сконвертировать, замените <code>diff -u ...</code> на <code>cat /путь/к/файлу.patch</code> — и всё.

<h3>3. Тестирование патча</h3>
Окей, вы только что сотворили патч, но как проверить, что он делает то, что должен? Примените его!

Из распакованного пакета исходного кода (рабочей копии для создания пакета) выполните

```
dpatch apply-all
```

а для отмены

```
dpatch deapply-all
```


<h3>4. Использование <code>dpatch</code> в <code>debian/rules</code></h3>

Осталось только дописать `debian/rules` таким образом, чтобы патчи из `debian/patches/` применялись в порядке, указанном в `debian/patches/00list`.

Думаю, самым простым способом будет модифицирование <code>debian/rules</code> следующим образом:

```
include /usr/share/dpatch/dpatch.make

...
build: build-stamp
build-stamp: patch-stamp
...
build stuff here
...

clean: unpatch
...
clean stuff here
...
...
```

Но если хотите, можете отдельно добавить цели <code>patch</code> и <code>unpatch</code>, как показано в следующем примере:

```
build-stamp: patch
...
build stuff here
...

clean: clean1 unpatch
clean1:
...
clean stuff here
...

patch: patch-stamp
patch-stamp:
dpatch apply-all -v
#dpatch call-all -a=pkg-info >patch-stamp

unpatch:
dpatch deapply-all
rm -rf patch-stamp debian/patched

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install patch unpatch \
clean1
```


В любом случае, советую следовать первому способу, так как он чище и более устойчив к ошибкам.

<h3>5. Восстановление первоначального апстримового кода</h3>

Самой первой вещью, которую должен запомнить каждый сопровождающий пакетов Debian, является: НИКОГДА не менять апстримовый код в своём пакете; вместо этого должны использоваться патчи. Даже если вы следуете этому Руководящему Правилу при создании своих пакетов, вы можете столкнуться с изменениями апстримового кода, когда будете усыновлять пакет.

Существует способ сконвертировать такие изменения (сделанные предыдущим сопровождающим пакета) в патч для <code>dpatch</code>:

<ul><li>используя <code>apt-get source &lt;пакет&gt;</code> или какую–либо другую команду, получите пакет исходников; будем считать, что он будет распакован в директорию с именем &lt;пакет-версия&gt; — перейдите в неё (заметим, что исходный файл будет в родительской директории)</li><li>измените <code>debian/rules</code> так, как показано в предыдущей секции этой статьи</li><li>используйте <code>dpatch-convert-diffgz</code>: эта утилита берёт .diff.gz, извлекает изменения, выполненные над апстримовым кодом, и конвертирует их в файл dpatch, который будет применяться во время сборки пакета</li></ul>Если вы управляете своими пакетами старым способом (без контроля версий исходного кода), работа завершена. Я использую Subversion, чтобы управлять своими пакетами, и это требует нескольких дополнительных шагов:<ul><li>скачиваете пакет с исходными кодами с зеркала репозитория Debian</li><li>распаковываете его во временную директорию &lt;tempdir&gt; (или позвольте <code>apt-get source</code> сделать это для вас)</li><li>импортируйте в репозиторий SVN (будет произведена проверка рабочей директории — &lt;workdir&gt;)</li><li>переходите в &lt;tempdir&gt; и меняете <code>debian/rules</code> (после чего выполняете то же самое в &lt;workdir&gt;)</li><li>выполняете <code>dpatch-convert-diffgz 01 restore_pristine_code</code> (можете выбирать любое имя); будут созданы файлы <code>debian/patches/01_restore_pristine_code.dpatch</code> и <code>debian/patches/00list</code></li><li>перемещаете оба вышеупомянутых файла в &lt;workdir&gt; и добавляете их в репозиторий</li><li>возвращаете назад апстримовый код, модифицированный предыдущим сопровождающим; это может означать копирование файлов руками (<code>cp -p ....</code>) из распакованного апстримового тарболла, либо выполнение <code>fakeroot debian/rules patch ; fakeroot debian/rules unpatch</code> (действенность последнего способа не гарантируется)</li></ul>Это немного сложно, но таким образом вы сможете «усыновить» пакет и использовать <code>dpatch</code>, что есть хорошо.

<h3 id='hakyll-convert-comments-title'>Comments (migrated from Blogger)</h3>
<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-12-25T06:06:55.765+02:00, virens wrote:</p>
<p class='hakyll-convert-comment-body'>
Рацпредложение: примечания редактора можно убирать <a href="http://pastebin.com/XgdfcXke" rel="nofollow">вот так</a>. Я сегодня этот инновационный метод распробовал: <a href="http://mydebianblog.blogspot.com/2008/10/linux-debian-gnulinux.html" rel="nofollow">вот как выглядит в постах</a> [см. разделы по печати и сканированию - аббревиатуры выделены].

Можно я немножко к тексту поцепляюсь? :-)

1. Вот это: <i>Хорошей практикой является добавление в патч сообщения о копирайте</i> длинное предложение хорошо бы разбить на два. Можно ссылочку на гайдлан дебиановский воткнуть.

2. <i>, а для отмены</i> граммарнаци будет против, но я бы запятую убрал :-)

3. <i>это чакаутнет</i> деспайт оф май ливинг ин инглиш-спикинг кантри, ай донт лайк сач транслитерайшн ин рашн артиклс 8-)

В остальном пост классный. Я был бы рад увидеть микс из этого и предыдущего постов у себя на блоге в качестве гостевого (не сейчас, но через некоторое время).
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-12-26T00:13:32.114+02:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
Касательно рацпредложения: выглядит красиво, но на практике чаще мешает, чем помогает. При чтении я предпочитаю устроится поудобней на стуле и просто время от времени нажимать пробел, перелистывая страницы. Двигания мышкой в попытках посмотреть, что там за примечание прилепил этот зараза перевозчик мешает, как мне кажется.

<b>длинное предложение хорошо бы разбить на два</b><br/>
Сделано! И правда, стало лучше.

<b>граммарнаци будет против, но я бы запятую убрал</b><br/>
При переводе таких вот участков текста всегда хочется пойти к книжному шкафу, взять какой–нибудь старенький математический (или физический — в смысле, по физике) талмуд и глянуть, как там после формул уточняется значение всяких коеффициентов. Но, увы, эта идея разбивается о суровые реалии: нету ни шкафа, ни талмуда. В общем ок, поправлено.

<b>деспайт оф…</b><br/>
Оно–то так, но ты можешь перевести этот кусок по–человечески? Я, например, совершенно не понял смысл вот этого самого примечания в скобках. Я даже <a href="http://minoru.psto.net/ogeeg" rel="nofollow">в psto вопрос задал</a>, но там что–то ни к чему подходящему так и не пришли.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-12-26T23:51:16.778+02:00, Paul Rufous wrote:</p>
<p class='hakyll-convert-comment-body'>
Хорошая статья. Жаль что нет перевода последней версии Debian New Maint Guide.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-12-27T08:23:40.066+02:00, virens wrote:</p>
<p class='hakyll-convert-comment-body'>
@Minoru комментирует... <br/>
<b>Касательно рацпредложения: выглядит красиво, но на практике чаще мешает</b><br/>
Я так пристроился сплавлять лирику в тексте. Вроде она и есть, а места занимает меньше. Когда писал здоровенный пост про десктоп, я так много чего запихал в подсказки.

&gt;&gt; граммарнаци будет против, но я бы запятую убрал

<b>При переводе таких вот участков текста всегда хочется пойти к книжному шкафу, взять какой–нибудь старенький математический (или физический — в смысле, по физике) талмуд и глянуть</b>

Минору, я ж здесь на то и сижу, весь из себя такой академик в доску :-) Делается это вот так:

<i>Рассмотрим выражение:<br/>
a+b=0,<br/>
где a - трали вали, b - фигли мигли, справедливое для всех тыры пыры.</i>

Но это в научной литературе. Мы ж не журнал Nature, правильно? Так вот, я лично такие запятые опускаю вовсе. Они только путают: надо ли вводить что-то с запятой или точкой. Пример:

<i>вводим команду /etc/init.d networking restart которая перезапустит...</i>

Граммарнаци в этом месте негодует. В общем правильно он негодует, но без запятой понятнее.


<b>    Оно–то так, но ты можешь перевести этот кусок по–человечески?</b><br/>
Сдаётся мне, что это вот что:<br/>
<i>(будет произведена проверка ) </i>

У нас тут в местных универмагах и сельпо касса так вот называется - Checkout. Там тебе овощи взвесят, и в пакетик сложат, и денюжку возьмут. И рюкзачок твой походный просют открыть - мало ли, чего туда завалилось. Вот это чакаут и есть :-) Проверка. 


<b>Я даже в psto вопрос задал, но там...</b><br/>
одни дятлы :-) Извини, не удержался. Ты по всяким подворотням не ходи, они тебя плохому Ингришу научат. Сразу местных австралийцев спрашивай, они тебе сразу всё скажут :-)
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-12-27T12:55:39.586+02:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
С запятыми всё ясно. Будем опускать, а то и правда — одна только путаница.

<b>&gt; (будет произведена проверка)</b><br/>
Да будет так :)

<b>&gt; Сразу местных австралийцев спрашивай, они тебе сразу всё скажут :-)</b><br/>
Хех. Замётано ;)
</p>
</div>



