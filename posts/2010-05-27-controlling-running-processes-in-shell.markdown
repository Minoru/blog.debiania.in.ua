---
title: Управление выполняющимися процессами в шелле
published: 2010-05-27T06:45:00Z
categories: 
tags: linux,tips'n'tricks
description: О фоновых задачах (fg/bg) и disown.
---

Уверен, многие новички, пытаясь пользоваться шеллом, наивно полагают, что в одном терминале может выполняться только одно приложение. Чуть более продвинутые слышали о (якобы монструозном) <code>screen</code>'е, позволяющим делать разные страшные штуки, в том числе запускать в одной консоли много приложений сразу. При этом очень полезные built-in команды часто остаются незамеченными. О них и пойдёт речь.

Сразу замечу, что в посте будут описаны bash и zsh. Другие шеллы могут не поддерживать указанных команд.

Итак, представим себе ситуацию: вы запустили какую-то долго выполняющуюся команду, скажем, <code>find</code>, и ждёте её вывода. Тут у вас появилась какая-то идейка, и вы уже тянетесь к клавиатуре, но шелл ведь занят, верно? Не беда — жмите <code>ctrl+z</code> и воплощайте идею в жизнь. Когда закончите, наберите <code>fg %1</code> — и прерванная команда продолжит выполняться.

Давайте теперь разберём, как же это работает. Когда вы нажимаете <code>ctrl+z</code>, текущий процесс приостанавливается («<i>suspend</i>» — «<i>приостанавливать</i>»). Следует понимать, что пока процесс приостановлен, он никак не реагирует на внешние раздражители — например, если вы приостановили какое-то графическое приложение, его окно не будет перерисовываться, а если это был <code>wget</code> — он не будет ничего качать.

Команда <code>fg</code> (название которой, как вы догадались, происходит от «<i>foreground</i>» — «<i>передний план</i>») выполняет абсолютно противоположную задачу — она запускает (можно сказать, снимает с паузы) приостановленное приложение. Аргумент указывает на то, какую именно задачу следует запустить.

Из предыдущего абзаца можно сделать два полезных вывода:<ol><li>вы можете приостанавливать более чем одну задачу одновременно;</li><li>каждая приостановленная задача имеет свой собственный номер, так что ими легко оперировать.</li></ol>Таким образом мы приходим к третьей команде — <code>jobs</code>. Несложно догадаться, что она выводит список всех задач вместе с их номерами.

Менее очевидной, но всё же верной догадкой является то, что помимо <code>fg</code> должна существовать и парная ей команда <code>bg</code> («<i>background</i>» — «<i>фон</i>»). Её задача — продолжить выполнение приостановленного процесса <i>в фоне</i>. Очень удобно с командами, вывод которых перенаправлен в файл: они ведь ничего не выводят на экран, так что нам нечего пялиться на занятый шелл — поместили её в фон и работаем дальше. Синтаксис <code>bg</code> ничем не отличается от оного у <code>fg</code> — команда принимает на вход номер задачи, выполнение которой следует продолжить в фоне. Кстати, отправить задачу в фон можно сразу же — достаточно просто дописать в конце команды амперсанд, например, вот так:
```
updatedb &
```

Недостаток всей этой системы один: при закрытии шелла все задачи прерываются. Возможно, в годы чистой консоли такое поведение и не мешало спокойно работать, но в наше время, когда многие смешивают Иксы и терминал, нередки ситуации вроде такой: из терминала запускается графическая утилитка, после чего терминал можно было бы закрыть, но нет, нельзя, иначе утилита тоже закроется. Грустно…

К счастью, даже для такой задачи у шелла есть решение, а имя ему — <code>disown</code>. Эта команда делает именно то, что нам нужно — она открепляет определённую задачу от шелла. Синтаксис ничем не отличается от <code>fg</code> и <code>bg</code> — команда принимает номер задачи. Команду также можно использовать вот в таком виде:
```
command & disown
```
(<b>обратите внимание, что амперсанд всего один!</b>) При этом процесс, созданный командой <code>command</code>, сразу же открепляется от шелла, так что вам не надо ничего больше вводить. Счастливые пользователи ZSH могут использовать сокращённую запись:
```
command &!
```
Правда, <code>disown</code> имеет некую специфику — если выполнить её для приостановленной задачи, задача так и останется приостановленной. Выход — сигнал <code>CONT</code>. После того, как сделали disown приостановленной задачи, наберите:
```
kill -CONT PID
```
где PID — это номер процесса, который мы только что открепили от консоли. Не пугайтесь команды <code>kill</code> — она вовсе не обязательно убивает процесс: как видите, с её помощью можно мирно передавать процессам какие-то команды (ещё один пример такого поведения — conky: если выполнить <code>kill -USR1 PID</code>, коньки перечитают свой конфиг). Отдельное слово также надо сказать про PID — BASH говорит его сам:
```
bash: warning: deleting stopped job 1 with process group 23710
```
(последнее число и есть искомый IDшник), а ZSH и вовсе выдаёт готовую команду:
```
disown: warning: job is suspended, use `kill -CONT -24309' to resume
```
Собственно, на этом разговор об управлении процессами в шелле можно считать законченным. В качестве дополнительной литературы могу посоветовать вывод <code>help fg</code>, <code>help bg</code>, <code>help jobs</code> и <code>help disown</code>. До встречи!

<h3 id='hakyll-convert-comments-title'>Comments (migrated from Blogger)</h3>
<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-27T10:04:12.712+03:00, bosha wrote:</p>
<p class='hakyll-convert-comment-body'>
Вместо disown можно ещё использовать nohup: nohup command. Если шелл закрыть, процесс останется.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-27T18:38:41.619+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
Так и знал, что кто-то таки спалит :) Короче, про screen, nohup и dtach — тссс! Про них я ещё напишу.
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-27T19:04:27.853+03:00, Анонимный wrote:</p>
<p class='hakyll-convert-comment-body'>
можно включить новый tab и ничего не нужно прерывать
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-27T19:23:02.302+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>&gt; можно включить новый tab и ничего не нужно прерывать </b><br/>
Можно. Но в tty, например, вы не найдёте табов, как, впрочем, и в легковесных исковых терминалах (xterm, емнип, не умеет). Да и в любом случае — неужели Вы, уважаемый анонимус, против получения новых знаний?
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-27T19:26:53.866+03:00, Pavel Vyazovoi wrote:</p>
<p class='hakyll-convert-comment-body'>
&gt;&gt; Короче, про screen, nohup и dtach — тссс!

tmux не забудь
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-27T19:34:01.821+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>&gt; tmux не забудь</b><br/>
М! Слышал о нём, но не знал, что он из этой оперы. Постараюсь разобраться и написать, спасибо за подсказку!
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-05-28T00:49:21.617+03:00, bosha wrote:</p>
<p class='hakyll-convert-comment-body'>
&gt;tmux не забудь 

Ей! Не пали. У меня статья завтра про него опубликуется ;)
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-06-12T13:00:58.514+03:00, Анонимный wrote:</p>
<p class='hakyll-convert-comment-body'>
Здорово, наконец-то узнал как продолжить команду в фоне (bg). Да и здесь Вы описались: &quot;Синтаксис bg ничем не отличается от оного у fg  — команда принимает на вход номер задачи, которую следует отправить в фон.&quot; Должно быть типа &quot;..активировать фоновую задачу&quot;
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-06-12T21:37:59.335+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
<b>&gt; Да и здесь Вы описались: &quot;Синтаксис bg ничем не отличается от оного у fg — команда принимает на вход номер задачи, которую следует отправить в фон.&quot; Должно быть типа &quot;..активировать фоновую задачу&quot;</b><br/>
Да, формулировку следовало бы поправить. Сейчас займусь. Спасибо за комментарий!
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-09-10T10:02:37.112+03:00, Beggy wrote:</p>
<p class='hakyll-convert-comment-body'>
Век живи, век учись :)) Запись %1 меня поначалу смутила, но теперь после прочтения соответствующей секции man bash понимаю, что это как раз правильный способ.<br/>
Если позволите, я бы все-таки где нибудь вставил мысль, что все это внутренние команды конкретного shell (например bash) и они могут не поддерживаться или поддерживаться иначе в других. И пару слов о главном герое &quot;&amp;&quot; - именно с него у новичков обычно начинается знакомство с &quot;фоновыми&quot; задачами.<br/>
А так - спасибо. Хорошая статья - буду рекомендовать :)
</p>
</div>

<div class='hakyll-convert-comment'>
<p class='hakyll-convert-comment-date'>On 2010-09-10T17:02:49.470+03:00, Minoru wrote:</p>
<p class='hakyll-convert-comment-body'>
Спасибо, Beggy! С амперсандом я и правда дал маху :)

Добавил пару предложений в абзац о fg, а в начале поста дописал абзацик о том, что речь идёт о bash/zsh.
</p>
</div>



